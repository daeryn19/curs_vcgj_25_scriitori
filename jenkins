pipeline {
    agent any

    environment {
        IMAGE_NAME = "julesvernes"
        IMAGE_TAG = "v${BUILD_NUMBER}"
        VENV = ".venv"
    }

    stages {
        stage('Checkout') {
            steps {
                echo ' Preluare cod sursă...'
                checkout scm
            }
        }

        stage('Setup virtualenv și instalare requirements') {
            steps {
                echo ' Creare mediu virtual și instalare dependințe...'
                sh '''
                    python3 -m venv ${VENV}
                    . ${VENV}/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Linting cu pylint') {
            steps {
                echo ' Verificare cod cu pylint...'
                sh '''
                    . ${VENV}/bin/activate
                    pylint JulesVerne.py || true
                '''
            }
        }

        stage('Testare (dacă există teste)') {
            steps {
                echo ' Rulare teste (dacă există)...'
                sh '''
                    . ${VENV}/bin/activate
                    if [ -d "tests" ]; then pytest tests; else echo "Nu există directorul tests/."; fi
                '''
            }
        }

        stage('Construire imagine Docker') {
            steps {
                echo ' Construire imagine Docker...'
                sh '''
                    docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
                '''
            }
        }

        stage('Rulare imagine Docker (opțional)') {
            when {
                expression { return params.RUN_CONTAINER == true }
            }
            steps {
                echo ' Pornire container Docker...'
                sh '''
                    docker run -d --rm --name julesvernes_container_${BUILD_NUMBER} -p 5050:5050 ${IMAGE_NAME}:${IMAGE_TAG}
                '''
            }
        }
    }

    post {
        success {
            echo ' Build completat cu succes pentru proiectul Jules Verne.'
        }
        failure {
            echo ' A apărut o eroare în pipeline-ul Jules Verne.'
        }
    }

    parameters {
        booleanParam(name: 'RUN_CONTAINER', defaultValue: false, description: 'Rulează aplicația Jules Verne după build?')
    }
}
